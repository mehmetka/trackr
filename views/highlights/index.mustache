<!doctype html>
<html lang="en">

<head>
    {{> head }}
    <link rel="stylesheet" href="/css/simplemde-theme-dark.min.css">
    <link rel="stylesheet" href="/css/version-diff.css">
    <link rel="stylesheet" href="/css/highlightjs/default.min.css">
    <style>
        img {
            position: relative;
            left: 50%;
            transform: translate(-50%, 0);
            -ms-transform: translate(-50%, 0);
            -webkit-transform: translate(-50%, 0);
            max-width: 100%;
            max-height: 100%;
        }
    </style>
</head>

<body class="vertical dark">
<div class="wrapper">
    <nav class="topnav navbar navbar-light">
        {{> navbar }}

        <input id="searchHighlights" class="nav form-control bg-transparent border-0 pl-4 text-muted" type="search"
               placeholder="Search Highlights" aria-label="Search"
               {{#searchParam}}value="{{{searchParam}}}"{{/searchParam}}>

    </nav>
    <main role="main" class="main-content">
        <div class="container-fluid">
            <div class="row justify-content-center">
                <div class="col-12">

                    <div class="card mb-4">
                        <div class="card">
                            <div class="card-body">

                                <h5 class="card-title">Add New Highlight</h5>
                                <textarea id="highlight" hidden></textarea>

                                <div class="input-group input-group-md">
                                    <input id="author" placeholder="Author" type="text"
                                           class="form-control enterButtonKeyPress">
                                    <input id="source" placeholder="Source" type="text"
                                           class="form-control enterButtonKeyPress">
                                    <input id="title" placeholder="Title" type="text"
                                           class="form-control enterButtonKeyPress">
                                    <input id="blogPath" placeholder="Blog Path" type="text"
                                           value="general/uncategorized"
                                           class="form-control enterButtonKeyPress">
                                </div>

                                <br>

                                <div class="form-row">
                                    <div class="form-group col-4">
                                        <input id="tags" placeholder="Tags" type="text" {{#tag}}value="{{.}}"{{/tag}}
                                               class="form-control enterButtonKeyPress">
                                    </div>
                                    <div class="form-group col-2">
                                        <input id="page" placeholder="Page" type="number"
                                               class="form-control enterButtonKeyPress">
                                    </div>
                                    <div class="form-group col-2">
                                        <select id="is_secret" class="form-control">
                                            <option>Public</option>
                                            <option selected>Private</option>
                                        </select>
                                    </div>
                                    <div class="form-group col-2">
                                        <select id="is_encrypted" class="form-control">
                                            <option disabled selected>Store encrypted?</option>
                                            <option>Yes</option>
                                            <option>No</option>
                                        </select>
                                    </div>
                                    <div class="form-group col-2">
                                        <select id="book" name="book[]" class="form-control select2-multi">
                                            <option disabled selected></option>
                                            {{#books}}
                                                <option value="{{uid}}">{{book}}</option>
                                            {{/books}}
                                        </select>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="accordion w-100" id="accordion1">
                                <div class="card shadow">
                                    <div class="card-header" id="heading1">
                                        <a role="button" href="#collapse1" data-toggle="collapse"
                                           data-target="#collapse1" aria-expanded="false" aria-controls="collapse1">
                                            <strong>Tags</strong>
                                        </a>
                                    </div>
                                    <div id="collapse1" class="collapse" aria-labelledby="heading1"
                                         data-parent="#accordion1">
                                        <div class="card-body">
                                            {{#headerTags}}
                                            <a role="button" href="/highlights{{#href}}?tag={{href}}{{/href}}"
                                                class="badge badge-{{badge}}">
                                                <strong>#{{tag}} ({{tag_count}})</strong>
                                                </a>
                                            {{/headerTags}}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div> <!-- end section -->

                    <br>

                    {{> highlight-cards }}

                </div> <!-- .col-12 -->
            </div> <!-- .row -->
        </div> <!-- .container-fluid -->
    </main> <!-- main -->
</div> <!-- .wrapper -->

{{> include}}
{{> menu }}
{{> highlight-versions }}

<script src="/js/simplemde.min.js"></script>
<script src="/js/highlight.min.js"></script>
<script src="/js/jquery.lazy.min.js"></script>
<script src="/js/jquery.lazy.plugins.min.js"></script>
<script src="/js/codemirror-4.inline-attachment.min.js"></script>

<script>
    $(document).ready(function () {

        $(document).on('keydown', function (e) {
            if (e.metaKey && e.keyCode === 13) {
                saveHighlight();
            }
        });

        var unsavedChanges = false;
        $('.highlightToolTip').tooltip({
            trigger: 'manual' // Disable automatic trigger
        });

        $('.highlightToolTip').on('mouseenter', function () {
            var button = $(this);
            var highlightId = $(this).data('id');

            // Check if data is already fetched
            if (!button.data('loaded')) {
                // Show loading message
                button.attr('title', 'Loading...').tooltip('show');

                var result = ajaxCall('GET', "/highlights/" + highlightId, null, false, false)

                if (result !== false) {
                    // Save the fetched data in a data attribute
                    button.data('title', result.highlight);
                    button.data('loaded', true);

                    // Set the new tooltip content and show it
                    button.attr('title', result.highlight).tooltip('show');
                } else {
                    // Set error message if AJAX request fails
                    button.attr('title', 'Failed to load content').tooltip('show');
                }


            } else {
                // Use cached data
                button.attr('title', button.data('title')).tooltip('show');
            }

        });

        // Hide tooltip on mouseleave
        $('.highlightToolTip').on('mouseleave', function () {
            $(this).tooltip('hide');
        });

        $('.select2-multi').select2({
            placeholder: "Reference with books",
            multiple: false,
            theme: 'bootstrap4',
        });

        $(".lazy").Lazy();

        hljs.highlightAll();

        var simplemde = new SimpleMDE({
            element: $("#highlight")[0],
            toolbar: ["bold", "italic", "strikethrough", "heading", "code", "quote", "unordered-list", "ordered-list", "clean-block", "link", "image", "table", "horizontal-rule", "preview"],
            insertTexts: {"image": ["![", "](/img/)"]},
            autofocus: true
        });

        inlineAttachment.editors.codemirror4.attach(simplemde.codemirror, {
            uploadUrl: '/images'
        });

        $('#searchHighlights').bind('keypress', function (e) {
            if (e.keyCode == 13) {

                var searchParam = $('#searchHighlights').val();

                if (searchParam !== '') {
                    const baseUrl = window.location.origin + window.location.pathname; // Base URL without query params
                    const newUrl = `${baseUrl}?type=0&search=${encodeURIComponent(searchParam)}`; // New URL with search param
                    window.location.href = newUrl;

                    // var result = ajaxCall('POST', "/highlights/search", 'searchParam=' + searchParam, false, false)
                    //
                    // if (result !== false) {
                    //     $('.highlightCard').remove();
                    //     $('.highlightCardBR').remove();
                    //
                    //     var template = $('#search-results-template').html();
                    //     Mustache.parse(template);
                    //     var rendered = Mustache.render(template, result);
                    //     $("#search-results").html(rendered);
                    //     $(".lazy").Lazy();
                    // }
                }
            }
        });

        $('.enterButtonKeyPress').bind('keypress', function (e) {
            if (e.keyCode == 13) {
                saveHighlight();
            }
        });

        $(".addToFavorite").on('click', function (e) {
            var type = 'highlight'
            var id = $(this).data("id")
            var data = "id=" + encodeURIComponent(id) +
                    "&type=" + encodeURIComponent(type)
            ajaxCall('POST', "/favorites", data)
        });

        simplemde.codemirror.on("change", function () {
            unsavedChanges = true;
        });

        window.addEventListener("beforeunload", function (event) {
            if (unsavedChanges) {
                event.preventDefault();
            }
        });

        var saveHighlight = function () {
            $.bootstrapPurr('running duplicate highlight control', {
                type: 'warning',
                delay: 1000
            });

            var highlight = simplemde.value();
            var author = $('#author').val();
            var source = $('#source').val();
            var page = $('#page').val();
            var tags = $('#tags').val();
            var title = $('#title').val();
            var is_encrypted = $('#is_encrypted').val();
            var blogPath = $('#blogPath').val();
            var book = $('#book').val();
            var is_secret = $('#is_secret').val();

            var data = "highlight=" + encodeURIComponent(highlight) +
                    "&author=" + encodeURIComponent(author) +
                    "&source=" + encodeURIComponent(source) +
                    "&page=" + encodeURIComponent(page) +
                    "&tags=" + encodeURIComponent(tags) +
                    "&title=" + encodeURIComponent(title) +
                    "&blogPath=" + encodeURIComponent(blogPath) +
                    "&is_encrypted=" + encodeURIComponent(is_encrypted) +
                    "&book=" + encodeURIComponent(book) +
                    "&is_secret=" + encodeURIComponent(is_secret);
            var result = ajaxCall('POST', "/highlights", data)

            if (result !== false) {
                unsavedChanges = false;
                location.reload();
            }
        }

    });
</script>
</body>

</html>